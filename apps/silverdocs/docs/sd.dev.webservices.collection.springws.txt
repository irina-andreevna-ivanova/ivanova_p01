Developing Webservices with Spring WS
-------------------------------------------------------------------------------------------------
Index:
    - common items
    - AbstractDomPayloadEndpoint


-------------------------------------------------------------------------------------------------
web.xml
-------------------------------------------------------------------------------------------------
<web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
    version="2.4">
    <display-name>Product Service</display-name>
    <!-- take especial notice of the name of this servlet -->
    <servlet>
        <servlet-name>spring-ws</servlet-name>
        <servlet-class>org.springframework.ws.transport.http.MessageDispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:/application-context.xml</param-value>
        </init-param>
        <!-- init-param>
            <param-name>transformWsdlLocations</param-name>
            <param-value>true</param-value>
        </init-param-->
    </servlet>
    <servlet-mapping>
        <servlet-name>spring-ws</servlet-name>
        <url-pattern>/productService/*</url-pattern>
    </servlet-mapping>
</web-app>
-------------------------------------------------------------------------------------------------
pom.xml
-------------------------------------------------------------------------------------------------
    <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>2.5.1</version>
    </dependency>
    <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>2.5.1</version>
    </dependency>
    <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>2.5.1</version>
    </dependency>
    <dependency>
        <groupId>org.springframework.ws</groupId>
        <artifactId>spring-ws-core</artifactId>
        <version>1.5.8</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>org.springframework.ws</groupId>
        <artifactId>spring-ws-core-tiger</artifactId>
        <version>1.5.8</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>org.springframework.ws</groupId>
        <artifactId>spring-ws-support</artifactId>
        <version>1.5.8</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc</artifactId>
        <version>2.5.1</version>
    </dependency>
    <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>2.5.1</version>
    </dependency>
    <dependency>
        <groupId>ro.bmocanu.tests</groupId>
        <artifactId>evaluate-ws-model</artifactId>
        <version>0.1</version>
        <scope>compile</scope>
    </dependency>
_________________________________________________________________________________________________
-------------------------------------------------------------------------------------------------
AbstractDomPayloadEndpoint
-------------------------------------------------------------------------------------------------
application-context.xml
-------------------------------------------------------------------------------------------------
    <bean id="productService" class="org.springframework.ws.wsdl.wsdl11.SimpleWsdl11Definition">
        <constructor-arg value="/WEB-INF/classes/wsdl/product-service.wsdl" />
    </bean>

    <bean name="productServiceDomPayloadEndpoint" class="ro.bmocanu.tests.ws.springws.server.ProductServiceDomPayloadEndpoint" />

    <!-- no 'id' required, EndpointMapping beans are automatically detected by the MessageDispatcher -->
    <bean id="endpointMapping" class="org.springframework.ws.server.endpoint.mapping.PayloadRootQNameEndpointMapping">
        <property name="mappings">
            <props>
                <prop key="{http://test.ro/product-schema}GetProductByIdRequest">productServiceDomPayloadEndpoint</prop>
            </props>
        </property>
    </bean>

    <bean id="main-schema" class="org.springframework.xml.xsd.SimpleXsdSchema">
        <property name="xsd" value="/WEB-INF/classes/wsdl/main-schema.xsd" />
    </bean>
-------------------------------------------------------------------------------------------------
public class ProductServiceDomPayloadEndpoint extends AbstractDomPayloadEndpoint {
    @Override
    protected Element invokeInternal( Element requestElement, Document responseDocument ) throws Exception {
        NodeList nodeList = requestElement.getChildNodes();
        String requestText = nodeList.item( 1 ).getTextContent();
        long id = Long.parseLong( requestText );
        System.out.println( "Client asked for product with ID=" + id );
        
        Product product = ProductManager.singleInstance.getProductById( id );

        Element responseElement = responseDocument.createElementNS("http://test.ro/product-service", "GetProductByIdResponse");
        Element productElement = responseDocument.createElementNS( "http://test.ro/product-service", "Product");
        productElement.setAttribute( "id", product.getId() + "" );
        productElement.setAttribute( "name", product.getName() );
        productElement.setAttribute( "descriptions", product.getDescription() );
        productElement.setAttribute( "received", product.getReceived().toString() );
        responseElement.appendChild( productElement );
        return responseElement;
    }
}
    